#include <stdio.h> //standar input and output library 
#include <stdlib.h>
#include <stdbool.h>
char box[10] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' }; //numbering boxes for board

void creating_board();
void marking_board(int, char);
int run();


int main()
{
	int choice;
	printf("==============================\n");
	printf("            Menu              \n");
	printf("==============================\n");
	printf("Press (1) to Start\n");
	printf("Press (2) to Quit\n");
	printf(">>");
	scanf_s("%d", &choice);

	switch (choice)
	{
		case 1:
			puts("Lets start!");
			run();
			int choice2;
			printf("Press (1) to restart\n");
			printf("Press (2) to Quit\n");
			printf(">>");
			scanf_s("%d", &choice2);
		
		switch (choice2)
		{
			case 1:
				run();
				break;

			case 2:
				puts("Shutting down");
				exit(0);
			default:
				puts("INVALID INPUT!");
		}
			
		break;
		case 2: 
			puts("Shutting down");
			exit(0);
		default:
			puts("INVALID INPUT!");
	}
	return 0;
}
int run()

{
	int choice, player = 1, i;
	char mark;
	do {
		creating_board();
		player = (player % 2) ? 1 : 2;

		printf("player %d, enter a number: ", player);
		scanf_s(" %d", &choice);
		mark = (player == 1) ? 'X' : 'o';
		marking_board(choice, mark);

		i = check_for_win();
		player++;

	} while (i == -1);

	creating_board();

	if (i == 1)
		printf("player %d you have won the game!", --player);
	else
		printf("<--------draw-------->");

	return 0;
}


void creating_board() // main function eventually will be named someothing else like "creating_board"
{
	printf("\n\n\tTic Tac Toe\n\n"); //print header 
	printf("Player 1 (x) -- Player 2 (0)\n\n"); // declare players 
	printf("      |     |    \n"); //creating board lines
	printf("  %c   |  %c  |  %c   \n", box[1], box[2], box[3]); //creating the number characters 1, 2, 3
	printf("______|_____|____\n"); //creating board lines
	printf("      |     |    \n"); //creating board lines
	printf("  %c   |  %c  |  %c   \n", box[4], box[5], box[6]); //creating the number characters 4, 5, 6
	printf("______|_____|____\n"); //creating board lines
	printf("      |     |    \n"); //creating board lines
	printf("  %c   |  %c  |  %c   \n", box[7], box[8], box[9]); //creating the number characters 7, 8, 9
	printf("______|_____|____\n"); //creating board lines
	printf("      |     |    \n"); //creating board lines
}


void marking_board(int choice, char mark) //Function for marking the board so players can pick a box number as their selection and after selcetion the fucntion will mark it out with an "X"
{
	//choosing box 1 through 9 will mark an "x"
	if (choice == 1 && box[1] == '1') 
		box[1] = mark;
	else if (choice == 2 && box[2] == '2')
		box[2] = mark;
	else if (choice == 3 && box[3] == '3')
		box[3] = mark;
	else if (choice == 4 && box[4] == '4')
		box[4] = mark;
	else if (choice == 5 && box[5] == '5')
		box[5] = mark;
	else if (choice == 6 && box[6] == '6')
		box[6] = mark;
	else if (choice == 7 && box[7] == '7')
		box[7] = mark;
	else if (choice == 8 && box[8] == '8')
		box[8] = mark;
	else if (choice == 9 && box[9] == '9 ')
		box[9] = mark;
	else
	{
		printf("invalid move"); //if player does not choose a number 1 through 9 then function will print "invalid move"
	}
}

int check_for_win()
{
	if (box[1] == box[2] && box[2] == box[3])
		return 1;                                    //horizontal match 
	else if (box[4] == box[5] && box[5] == box[6])
		return 1;
	else if (box[7] == box[8] && box[8] == box[9])
		return 1;

	else if (box[1] == box[4] && box[4] == box[7])
		return 1;                                    //vertical match 
	else if (box[2] == box[5] && box[5] == box[8])
		return 1;
	else if (box[3] == box[6] && box[6] == box[9])
		return 1;

	else if (box[1] == box[5] && box[5] == box[9])
		return 1;                                    //diagonal match
	else if (box[3] == box[5] && box[5] == box[7])
		return 1;

	else if (box[1] != '1' && box[2] != '2' && box[3] != '3' && box[4] != '4' && box[5] != '5' && box[6] != '6' && box[7] != '7' && box[8] != '8' && box[9] != '9') //no match 
		return 0;

	else
		return -1;

}
